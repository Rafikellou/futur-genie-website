const { GoogleGenerativeAI } = require('@google/generative-ai');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

class PersonasImageGenerator {
    constructor() {
        if (!process.env.GEMINI_API_KEY) {
            throw new Error('GEMINI_API_KEY non trouv√©e dans le fichier .env');
        }
        
        this.genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
        this.model = this.genAI.getGenerativeModel({ model: 'gemini-1.5-flash' });
    }

    /**
     * G√©n√®re une description d'image r√©aliste pour un persona sp√©cifique
     * @param {string} personaType - Type de persona (enfant, professeur, parent)
     * @returns {Promise<string>} Description de l'image g√©n√©r√©e
     */
    async generatePersonaImage(personaType) {
        const personas = {
            enfant: {
                title: "Enfant concentr√© qui gal√®re avec ses devoirs",
                prompt: `G√©n√®re une description d√©taill√©e pour cr√©er une image r√©aliste premium d'un enfant de 8-10 ans concentr√© mais qui gal√®re un peu avec ses devoirs.

Caract√©ristiques visuelles:
- Enfant assis √† un bureau dans sa chambre ou salon
- Expression concentr√©e mais l√©g√®rement frustr√©e
- Cahiers et livres ouverts devant lui
- Crayon √† la main, peut-√™tre se grattant la t√™te avec l'autre main
- √âclairage doux et chaleureux (lumi√®re de bureau ou naturelle)
- Environnement domestique moderne et accueillant
- Couleurs douces et apaisantes

Style photographique:
- Photo r√©aliste de haute qualit√©
- Profondeur de champ avec focus sur l'enfant
- √âclairage naturel et professionnel
- Composition √©quilibr√©e et esth√©tique
- Ambiance bienveillante malgr√© la difficult√©

L'image doit transmettre l'effort et la concentration de l'enfant tout en montrant qu'il a besoin d'aide, sans √™tre dramatique.`
            },
            professeur: {
                title: "Professeur submerg√© par les t√¢ches",
                prompt: `G√©n√®re une description d√©taill√©e pour cr√©er une image r√©aliste premium d'un(e) enseignant(e) de 30-45 ans qui a l'air submerg√© par le nombre de t√¢ches qu'il/elle doit accomplir.

Caract√©ristiques visuelles:
- Enseignant(e) assis(e) √† son bureau dans une salle de classe ou bureau
- Piles de copies √† corriger, cahiers, dossiers √©parpill√©s
- Expression fatigu√©e mais d√©termin√©e
- Peut-√™tre des lunettes, cheveux l√©g√®rement en d√©sordre
- Ordinateur portable ouvert avec plusieurs onglets
- Tableau blanc ou paperboard en arri√®re-plan avec notes
- √âclairage de bureau (n√©ons ou lampe de bureau)
- Tasse de caf√© √† moiti√© vide

Style photographique:
- Photo r√©aliste de haute qualit√©
- Angle l√©g√®rement en plong√©e pour montrer l'ampleur du travail
- √âclairage professionnel mais pas trop dramatique
- Couleurs neutres et professionnelles
- Composition qui montre la charge de travail

L'image doit montrer le professionnalisme de l'enseignant tout en illustrant sa surcharge de travail.`
            },
            parent: {
                title: "Parent inquiet avec enfant en arri√®re-plan",
                prompt: `G√©n√®re une description d√©taill√©e pour cr√©er une image r√©aliste premium d'un parent de 35-45 ans qui a l'air un peu inquiet, avec son enfant en arri√®re-plan en train de faire ses devoirs au bureau.

Caract√©ristiques visuelles:
- Parent au premier plan, expression l√©g√®rement soucieuse mais bienveillante
- Regard dirig√© vers l'enfant ou vers nous (spectateur)
- Enfant flou en arri√®re-plan, assis √† un bureau, concentr√© sur ses devoirs
- Environnement familial moderne et chaleureux (salon ou cuisine ouverte)
- √âclairage doux et naturel (fin d'apr√®s-midi)
- Parent peut tenir un t√©l√©phone ou avoir les bras crois√©s
- D√©coration moderne mais familiale

Style photographique:
- Photo r√©aliste de haute qualit√©
- Profondeur de champ avec parent net et enfant l√©g√®rement flou
- √âclairage naturel et chaleureux
- Composition √©quilibr√©e montrant la relation parent-enfant
- Couleurs douces et rassurantes
- Ambiance familiale et moderne

L'image doit transmettre l'inqui√©tude bienveillante du parent pour la r√©ussite de son enfant.`
            }
        };

        const persona = personas[personaType];
        if (!persona) {
            throw new Error(`Type de persona non reconnu: ${personaType}`);
        }

        try {
            console.log(`üé® G√©n√©ration de l'image: ${persona.title}...`);
            
            const result = await this.model.generateContent(persona.prompt);
            const response = await result.response;
            return {
                title: persona.title,
                description: response.text().trim()
            };
        } catch (error) {
            console.error('Erreur lors de la g√©n√©ration:', error);
            throw error;
        }
    }

    /**
     * G√©n√®re et sauvegarde toutes les descriptions d'images des personas
     */
    async generateAllPersonas() {
        const outputDir = './public/images/personas';
        
        // Cr√©er le dossier s'il n'existe pas
        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
        }

        const personas = ['enfant', 'professeur', 'parent'];
        const results = {};

        for (const personaType of personas) {
            try {
                const result = await this.generatePersonaImage(personaType);
                
                // Sauvegarder la description
                const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
                const filename = `${personaType}-description-${timestamp}.txt`;
                const filepath = path.join(outputDir, filename);
                
                const content = `Persona: ${result.title}
G√©n√©r√© le: ${new Date().toLocaleString('fr-FR')}

Description pour g√©n√©ration d'image:
${result.description}

Instructions pour l'outil de g√©n√©ration d'images:
- Utiliser cette description avec un g√©n√©rateur d'images IA (DALL-E, Midjourney, Stable Diffusion)
- Style: Photo r√©aliste, haute qualit√©, √©clairage professionnel
- Format: 16:9 ou 4:3 selon la composition
- R√©solution: Minimum 1920x1080px pour usage web
`;

                fs.writeFileSync(filepath, content, 'utf8');
                
                console.log(`‚úÖ ${result.title}`);
                console.log(`üìÅ Sauvegard√©: ${filepath}`);
                console.log(`üìù Description: ${result.description.substring(0, 100)}...`);
                console.log('---');
                
                results[personaType] = {
                    ...result,
                    filepath,
                    filename
                };
                
                // Pause entre les g√©n√©rations pour √©viter les limites de taux
                await new Promise(resolve => setTimeout(resolve, 1000));
                
            } catch (error) {
                console.error(`‚ùå Erreur pour ${personaType}:`, error.message);
            }
        }

        // Cr√©er un fichier r√©capitulatif
        const summaryPath = path.join(outputDir, 'personas-summary.md');
        const summaryContent = `# Images des Personas - Futur G√©nie

G√©n√©r√© le: ${new Date().toLocaleString('fr-FR')}

## Instructions d'utilisation

1. Utiliser les descriptions ci-dessous avec un g√©n√©rateur d'images IA
2. Sauvegarder les images g√©n√©r√©es dans le dossier \`public/images/personas/\`
3. Nommer les fichiers: \`enfant-persona.jpg\`, \`professeur-persona.jpg\`, \`parent-persona.jpg\`
4. Optimiser les images pour le web (compression, format WebP si possible)

## Descriptions g√©n√©r√©es

${Object.entries(results).map(([type, data]) => `
### ${data.title}

**Fichier cible:** \`${type}-persona.jpg\`

**Description:**
${data.description}

---
`).join('')}

## Int√©gration dans le site

Une fois les images g√©n√©r√©es, elles remplaceront les SVG actuels dans la section "L'√©ducation √©volue, mais les outils restent fig√©s" du fichier \`index.html\`.
`;

        fs.writeFileSync(summaryPath, summaryContent, 'utf8');
        console.log(`üìã R√©capitulatif cr√©√©: ${summaryPath}`);

        return results;
    }
}

// Fonction utilitaire pour utilisation en ligne de commande
async function main() {
    const args = process.argv.slice(2);
    
    if (args.length > 0 && args[0] === '--help') {
        console.log(`
üé® G√©n√©rateur d'images de personas pour Futur G√©nie

Usage:
  node generate-personas-images.js [persona]

Personas disponibles:
  - enfant     : Enfant concentr√© qui gal√®re avec ses devoirs
  - professeur : Professeur submerg√© par les t√¢ches
  - parent     : Parent inquiet avec enfant en arri√®re-plan

Sans argument: g√©n√®re toutes les descriptions de personas
        `);
        return;
    }
    
    try {
        const generator = new PersonasImageGenerator();
        
        if (args.length === 0) {
            // G√©n√©rer toutes les personas
            console.log('üöÄ G√©n√©ration de toutes les descriptions de personas...\n');
            await generator.generateAllPersonas();
            console.log('\n‚úÖ Toutes les descriptions ont √©t√© g√©n√©r√©es !');
            console.log('üìÅ V√©rifiez le dossier ./public/images/personas/');
        } else {
            // G√©n√©rer une persona sp√©cifique
            const personaType = args[0];
            const result = await generator.generatePersonaImage(personaType);
            console.log(`‚úÖ ${result.title}`);
            console.log(`üìù ${result.description}`);
        }
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'ex√©cution:', error.message);
        process.exit(1);
    }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
    main();
}

module.exports = PersonasImageGenerator;
